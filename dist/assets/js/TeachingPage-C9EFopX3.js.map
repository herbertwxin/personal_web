{"version":3,"file":"TeachingPage-C9EFopX3.js","sources":["../../../components/ui/dialog.tsx","../../../components/TeachingPage.tsx"],"sourcesContent":["'use client'\n\nimport * as React from 'react'\nimport * as DialogPrimitive from '@radix-ui/react-dialog'\nimport { XIcon } from 'lucide-react'\n\nimport { cn } from './utils'\n\nfunction Dialog({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Root>) {\n  return <DialogPrimitive.Root data-slot='dialog' {...props} />\n}\n\nfunction DialogTrigger({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Trigger>) {\n  return <DialogPrimitive.Trigger data-slot='dialog-trigger' {...props} />\n}\n\nfunction DialogPortal({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Portal>) {\n  return <DialogPrimitive.Portal data-slot='dialog-portal' {...props} />\n}\n\nfunction DialogClose({\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Close>) {\n  return <DialogPrimitive.Close data-slot='dialog-close' {...props} />\n}\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    data-slot='dialog-overlay'\n    className={cn(\n      'data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 fixed inset-0 z-[9999] bg-black/60 pointer-events-auto',\n      // Enhanced backdrop blur with vendor prefixes and fallbacks\n      'backdrop-blur-sm',\n      '[backdrop-filter:blur(4px)] [-webkit-backdrop-filter:blur(4px)] [filter:blur(0px)]',\n      // Ensure proper stacking and interaction\n      'will-change-[backdrop-filter] transform-gpu',\n      className\n    )}\n    style={{\n      // Additional vendor prefix support for backdrop blur\n      WebkitBackdropFilter: 'blur(4px)',\n      backdropFilter: 'blur(4px)',\n      // Ensure overlay is clickable\n      pointerEvents: 'auto',\n      ...props.style,\n    }}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nfunction DialogContent({\n  className,\n  children,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Content>) {\n  return (\n    <DialogPortal data-slot='dialog-portal'>\n      <DialogOverlay />\n      <DialogPrimitive.Content\n        data-slot='dialog-content'\n        className={cn(\n          'bg-background data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 fixed top-[50vh] left-[50vw] z-[10000] grid w-full max-w-[calc(100vw-2rem)] -translate-x-1/2 -translate-y-1/2 gap-4 rounded-lg border p-6 shadow-lg duration-200 sm:max-w-lg',\n          // Enhanced positioning and interaction\n          'pointer-events-auto will-change-transform transform-gpu',\n          className\n        )}\n        style={{\n          // Ensure content is above overlay and properly positioned\n          background: '#ffffff',\n          zIndex: 10000,\n          position: 'fixed',\n          top: '50vh',\n          left: '50vw',\n          transform: 'translate(-50%, -50%)',\n          // Optimize for animations\n          willChange: 'transform, opacity',\n          ...props.style,\n        }}\n        {...props}\n      >\n        {children}\n        <DialogPrimitive.Close className=\"ring-offset-background focus:ring-ring data-[state=open]:bg-accent data-[state=open]:text-muted-foreground absolute top-4 right-4 rounded-xs opacity-70 transition-opacity hover:opacity-100 focus:ring-2 focus:ring-offset-2 focus:outline-hidden disabled:pointer-events-none [&_svg]:pointer-events-none [&_svg]:shrink-0 [&_svg:not([class*='size-'])]:size-4 z-[10001]\">\n          <XIcon />\n          <span className='sr-only'>Close</span>\n        </DialogPrimitive.Close>\n      </DialogPrimitive.Content>\n    </DialogPortal>\n  )\n}\n\nfunction DialogHeader({ className, ...props }: React.ComponentProps<'div'>) {\n  return (\n    <div\n      data-slot='dialog-header'\n      className={cn('flex flex-col gap-2 text-center sm:text-left', className)}\n      {...props}\n    />\n  )\n}\n\nfunction DialogFooter({ className, ...props }: React.ComponentProps<'div'>) {\n  return (\n    <div\n      data-slot='dialog-footer'\n      className={cn(\n        'flex flex-col-reverse gap-2 sm:flex-row sm:justify-end',\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction DialogTitle({\n  className,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Title>) {\n  return (\n    <DialogPrimitive.Title\n      data-slot='dialog-title'\n      className={cn('text-lg leading-none font-semibold', className)}\n      {...props}\n    />\n  )\n}\n\nfunction DialogDescription({\n  className,\n  ...props\n}: React.ComponentProps<typeof DialogPrimitive.Description>) {\n  return (\n    <DialogPrimitive.Description\n      data-slot='dialog-description'\n      className={cn('text-muted-foreground text-sm', className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Dialog,\n  DialogClose,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogOverlay,\n  DialogPortal,\n  DialogTitle,\n  DialogTrigger,\n}\n","import { motion, useScroll, useTransform } from 'framer-motion'\nimport { Badge } from './ui/badge'\nimport { Button } from './ui/button'\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from './ui/dialog'\nimport { BookOpen, Download, Video, FileText } from 'lucide-react'\nimport { useRef, useState, useCallback, useEffect } from 'react'\n\ninterface Course {\n  code: string\n  title: string\n  level: string\n  semester: string\n  description: string\n  materials: {\n    type: string\n    count: number\n    icon: React.ComponentType\n  }[]\n  topics: string[]\n  status?: string\n  folderPath?: string\n}\n\ninterface Resource {\n  title: string\n  description: string\n  type: string\n  items: number\n  level: string\n  lastUpdated: string\n}\n\ninterface DialogState {\n  isOpen: boolean\n  dialogId: string\n  content: Course | Resource | null\n  triggerElement: HTMLElement | null\n}\n\nexport function TeachingPage() {\n  const containerRef = useRef(null)\n\n  // Enhanced dialog state management\n  const [dialogStates, setDialogStates] = useState<Map<string, DialogState>>(new Map())\n  const dialogTimeouts = useRef<Map<string, NodeJS.Timeout>>(new Map())\n\n  // Track active dialogs for proper cleanup\n  const activeDialogs = useRef<Set<string>>(new Set())\n\n  // Enhanced dialog management functions\n  const openDialog = useCallback((dialogId: string, content: Course | Resource, triggerElement: HTMLElement | null) => {\n    // Clear any existing timeout for this dialog\n    const existingTimeout = dialogTimeouts.current.get(dialogId)\n    if (existingTimeout) {\n      clearTimeout(existingTimeout)\n      dialogTimeouts.current.delete(dialogId)\n    }\n\n    // Update dialog state\n    setDialogStates(prev => {\n      const newStates = new Map(prev)\n      newStates.set(dialogId, {\n        isOpen: true,\n        dialogId,\n        content,\n        triggerElement\n      })\n      return newStates\n    })\n\n    // Track active dialog\n    activeDialogs.current.add(dialogId)\n  }, [])\n\n  const closeDialog = useCallback((dialogId: string) => {\n    const dialogState = dialogStates.get(dialogId)\n\n    // Return focus to trigger element if available\n    if (dialogState?.triggerElement) {\n      // Use a timeout to ensure the dialog has fully closed before focusing\n      const timeout = setTimeout(() => {\n        try {\n          dialogState.triggerElement?.focus()\n        } catch (error) {\n          // Silently handle focus errors (element might be unmounted)\n          console.debug('Focus restoration failed for dialog:', dialogId, error)\n        }\n        dialogTimeouts.current.delete(dialogId)\n      }, 100)\n\n      dialogTimeouts.current.set(dialogId, timeout)\n    }\n\n    // Update dialog state\n    setDialogStates(prev => {\n      const newStates = new Map(prev)\n      newStates.set(dialogId, {\n        ...dialogState,\n        isOpen: false,\n        content: null\n      } as DialogState)\n      return newStates\n    })\n\n    // Remove from active dialogs\n    activeDialogs.current.delete(dialogId)\n  }, [dialogStates])\n\n  const getDialogState = useCallback((dialogId: string): DialogState => {\n    return dialogStates.get(dialogId) || {\n      isOpen: false,\n      dialogId,\n      content: null,\n      triggerElement: null\n    }\n  }, [dialogStates])\n\n  // Cleanup function to prevent memory leaks\n  useEffect(() => {\n    return () => {\n      // Clear all timeouts on unmount\n      dialogTimeouts.current.forEach(timeout => clearTimeout(timeout))\n      dialogTimeouts.current.clear()\n\n      // Clear active dialogs tracking\n      activeDialogs.current.clear()\n\n      // Clear dialog states\n      setDialogStates(new Map())\n    }\n  }, [])\n\n  // Handle dialog state changes and cleanup\n  useEffect(() => {\n    // Clean up closed dialogs after a delay to prevent memory leaks\n    const cleanupTimeout = setTimeout(() => {\n      setDialogStates(prev => {\n        const newStates = new Map()\n        prev.forEach((state, id) => {\n          // Keep only open dialogs or recently closed ones\n          if (state.isOpen || activeDialogs.current.has(id)) {\n            newStates.set(id, state)\n          }\n        })\n        return newStates\n      })\n    }, 5000) // Clean up after 5 seconds\n\n    return () => clearTimeout(cleanupTimeout)\n  }, [dialogStates])\n\n  const { scrollYProgress } = useScroll({\n    target: containerRef,\n    offset: ['start end', 'end start'],\n  })\n\n  const y = useTransform(scrollYProgress, [0, 1], [0, -20])\n\n  const courses = [\n    {\n      code: 'EC 201',\n      title: 'Principles of Microeconomics',\n      level: 'Undergraduate',\n      semester: 'Spring 2025',\n      description:\n        'Examines how consumers and firms make choices when facing scarce resources, and how those choices are related to government policy and market outcomes, such as prices and output.',\n      materials: [\n        { type: 'Course Materials', count: 0, icon: FileText },\n      ],\n      topics: [\n        'Not available',\n      ],\n      status: 'Not available in Course Materials'\n    },\n    {\n      code: 'EC201',\n      title: 'Principles of Microeconomics',\n      level: 'Undergraduate',\n      semester: 'Winter 2024',\n      description:\n        'Examines how consumers and firms make choices when facing scarce resources, and how those choices are related to government policy and market outcomes, such as prices and output.',\n      materials: [\n        { type: 'Weekly Materials', count: 9, icon: FileText },\n        { type: 'PDF Lectures', count: 3, icon: FileText },\n        { type: 'Pages Documents', count: 6, icon: FileText },\n      ],\n      topics: [\n        'Consumer Choice Theory',\n        'Producer Theory',\n        'Market Structures',\n        'Government Policy',\n        'Market Outcomes',\n        'Price Theory',\n      ],\n      status: 'Available',\n      folderPath: 'EC201_Winter_2024'\n    },\n    {\n      code: 'EC101',\n      title: 'Contemporary Economic Issues',\n      level: 'Undergraduate',\n      semester: 'Fall 2024',\n      description:\n        'Examines contemporary public policy using economic principles. Topics may include balanced budgets and tax reform, unemployment, health care, poverty and income redistribution, environmental policy, and international trade policy.',\n      materials: [\n        { type: 'Course Materials', count: 0, icon: FileText },\n      ],\n      topics: [\n        'Not available',\n      ],\n      status: 'Not available in Course Materials'\n    },\n    {\n      code: 'ECON1002',\n      title: 'Introductory Macroeconomics',\n      level: 'Undergraduate',\n      semester: 'Semester 1, 2024',\n      description:\n        'Addresses the analysis of the level of employment and economic activity in the economy as a whole. The unit examines the main factors that determine the overall levels of production and employment in the economy, including the influence of government policy and international trade. This analysis enables an exploration of money, interest rates and financial markets, and a deeper examination of inflation, unemployment and economic policy. Prior knowledge of algebraic equations and differential calculus is assumed.',\n      materials: [\n        { type: 'Tutorial Materials', count: 12, icon: FileText },\n        { type: 'Weekly Presentations', count: 11, icon: FileText },\n        { type: 'Economic Figures', count: 85, icon: FileText },\n        { type: 'Interactive Presentations', count: 2, icon: Video },\n        { type: 'Answer Keys', count: 4, icon: FileText },\n      ],\n      topics: [\n        'Employment and Economic Activity',\n        'Production and Employment Levels',\n        'Government Policy',\n        'International Trade',\n        'Money and Interest Rates',\n        'Financial Markets',\n        'Inflation and Unemployment',\n        'Economic Policy Analysis',\n      ],\n      status: 'Available',\n      folderPath: 'ECON1002_S1_2024'\n    },\n  ]\n\n  const resources = [\n    {\n      title: 'DSGE Modeling Tutorial Series',\n      description:\n        'Comprehensive video series on building and estimating DSGE models',\n      type: 'Video Series',\n      items: 15,\n      level: 'Advanced',\n      lastUpdated: '2024-01-15',\n    },\n    {\n      title: 'Macroeconomics Problem Bank',\n      description:\n        'Collection of solved problems covering all major macroeconomic topics',\n      type: 'Problem Sets',\n      items: 120,\n      level: 'All Levels',\n      lastUpdated: '2023-12-20',\n    },\n    {\n      title: 'MATLAB for Economists',\n      description:\n        'Complete guide to using MATLAB for economic research and analysis',\n      type: 'Code Repository',\n      items: 45,\n      level: 'Intermediate',\n      lastUpdated: '2024-01-10',\n    },\n    {\n      title: 'Economic Data Analysis Workshop',\n      description:\n        'Workshop materials on working with macroeconomic time series data',\n      type: 'Workshop',\n      items: 8,\n      level: 'Intermediate',\n      lastUpdated: '2023-11-30',\n    },\n  ]\n\n  const getLevelColor = (level: string) => {\n    switch (level) {\n      case 'Undergraduate':\n        return 'bg-green-100 text-green-700 border-green-300'\n      case 'Graduate':\n        return 'bg-blue-100 text-blue-700 border-blue-300'\n      case 'Advanced':\n        return 'bg-red-100 text-red-700 border-red-300'\n      case 'All Levels':\n        return 'bg-[#e9e5ff] text-[#5a4fcf] border-[#b8a9ff]'\n      case 'Intermediate':\n        return 'bg-yellow-100 text-yellow-700 border-yellow-300'\n      default:\n        return 'bg-gray-100 text-gray-700 border-gray-300'\n    }\n  }\n\n  const handleDownload = (folderPath: string) => {\n    // Create a zip download link for the entire course folder\n    const downloadUrl = `/downloadable/teach/${folderPath}`\n    window.open(downloadUrl, '_blank')\n  }\n\n  return (\n    <motion.div\n      ref={containerRef}\n      className='min-h-screen pb-12 px-6'\n      style={{ y }}\n    >\n      <div className='max-w-6xl mx-auto'>\n        {/* Header */}\n        <div className='text-center mb-12'>\n          <h1 className='text-4xl text-black mb-4'>Teaching Materials</h1>\n          <p className='text-xl text-black mb-6 max-w-3xl mx-auto'>\n            Educational resources, course materials, and tutorials for students.\n          </p>\n        </div>\n\n        {/* Current Courses */}\n        <div className='mb-16'>\n          <h2 className='text-3xl text-black mb-8 border-b border-[#d6ceff] pb-4'>\n            Current Courses\n          </h2>\n          <div className='space-y-6'>\n            {courses.map((course, index) => (\n              <motion.div\n                key={index}\n                initial={{ opacity: 0, y: 20 }}\n                animate={{ opacity: 1, y: 0 }}\n                transition={{ duration: 0.3, delay: index * 0.1 }}\n                className='border-b border-gray-200 pb-6 last:border-b-0'\n              >\n                {/* Course Header with Tabular Information */}\n                <div className='mb-4'>\n                  <div className='flex items-start justify-between mb-2'>\n                    <div className='flex-1'>\n                      <h3 className='text-xl font-medium text-black mb-1'>\n                        {course.code}: {course.title}\n                      </h3>\n                      <div className='text-sm text-gray-600 mb-2'>\n                        {course.description}\n                      </div>\n                      {course.status === 'Not available in Course Materials' && (\n                        <div className='text-sm text-red-600 font-medium mb-2'>\n                          Not available in Course Materials\n                        </div>\n                      )}\n                    </div>\n                    <div className='ml-6 text-right'>\n                      {course.status === 'Available' ? (\n                        <Dialog\n                          open={getDialogState(`course-${index}`).isOpen}\n                          onOpenChange={(open) => {\n                            if (!open) {\n                              closeDialog(`course-${index}`)\n                            }\n                          }}\n                        >\n                          <DialogTrigger asChild>\n                            <Button\n                              size='sm'\n                              variant='outline'\n                              className='border-[#b8a9ff] text-[#6A5ACD] hover:bg-[#f3f1ff]'\n                              onClick={(e) => {\n                                openDialog(`course-${index}`, course, e.currentTarget)\n                              }}\n                            >\n                              View Materials\n                            </Button>\n                          </DialogTrigger>\n                          <DialogContent className='max-w-4xl max-h-[80vh] overflow-y-auto'>\n                            <DialogHeader>\n                              <DialogTitle className='text-2xl text-black mb-2'>\n                                {course.title} - Course Materials\n                              </DialogTitle>\n                              <DialogDescription>\n                                Access all course materials, assignments, and\n                                resources for this {course.level.toLowerCase()} level\n                                course.\n                              </DialogDescription>\n                              <Badge\n                                className={`w-fit ${getLevelColor(course.level)}`}\n                              >\n                                {course.level}\n                              </Badge>\n                            </DialogHeader>\n                            <div className='mt-6'>\n                              <div className='mb-6'>\n                                <p className='text-black mb-4'>\n                                  {course.description}\n                                </p>\n                                <div className='flex items-center space-x-4 text-sm text-black'>\n                                  <span>\n                                    <strong>Course Code:</strong> {course.code}\n                                  </span>\n                                  <span>\n                                    <strong>Semester:</strong> {course.semester}\n                                  </span>\n                                </div>\n                              </div>\n\n                              <div className='mb-6'>\n                                <div className='flex items-center justify-between mb-3'>\n                                  <h4 className='text-lg text-black'>\n                                    Available Materials\n                                  </h4>\n                                  <Button\n                                    size='sm'\n                                    className='bg-[#6A5ACD] hover:bg-[#5a4fcf] text-white'\n                                    onClick={() => course.folderPath && handleDownload(course.folderPath)}\n                                  >\n                                    <Download className='w-3 h-3 mr-1' />\n                                    Download All Materials\n                                  </Button>\n                                </div>\n                                <div className='space-y-2'>\n                                  {course.materials.map((material, matIndex) => (\n                                    <div\n                                      key={matIndex}\n                                      className='flex items-center justify-between py-2 px-3 hover:bg-gray-50 rounded'\n                                    >\n                                      <div className='flex items-center space-x-3'>\n                                        <material.icon className='w-4 h-4 text-[#6A5ACD]' />\n                                        <span className='text-black text-sm'>\n                                          {material.type} ({material.count} items)\n                                        </span>\n                                      </div>\n                                      <Button\n                                        size='sm'\n                                        variant='outline'\n                                        className='border-[#b8a9ff] text-[#6A5ACD] hover:bg-[#e9e5ff] text-xs'\n                                        onClick={() => course.folderPath && handleDownload(course.folderPath)}\n                                      >\n                                        <Download className='w-3 h-3 mr-1' />\n                                        Browse\n                                      </Button>\n                                    </div>\n                                  ))}\n                                </div>\n                              </div>\n\n                              <div>\n                                <h4 className='text-lg text-black mb-3'>\n                                  Topics Covered\n                                </h4>\n                                <div className='text-sm text-gray-600'>\n                                  {course.topics.join(', ')}\n                                </div>\n                              </div>\n                            </div>\n                          </DialogContent>\n                        </Dialog>\n                      ) : (\n                        <Button\n                          size='sm'\n                          variant='outline'\n                          disabled\n                          className='border-gray-300 text-gray-400'\n                        >\n                          No Materials\n                        </Button>\n                      )}\n                    </div>\n                  </div>\n\n                  {/* Tabular Course Information */}\n                  <div className='grid grid-cols-3 gap-4 text-sm bg-gray-50 p-3 rounded'>\n                    <div>\n                      <span className='font-medium text-gray-700'>Level:</span> {course.level}\n                    </div>\n                    <div>\n                      <span className='font-medium text-gray-700'>Semester:</span> {course.semester}\n                    </div>\n                    <div>\n                      <span className='font-medium text-gray-700'>Materials:</span> {\n                        course.status === 'Available'\n                          ? `${course.materials.reduce((sum, m) => sum + m.count, 0)} items`\n                          : 'Not available'\n                      }\n                    </div>\n                  </div>\n                </div>\n\n                {/* Materials List */}\n                <div className='mb-4'>\n                  <h4 className='text-sm font-medium text-gray-700 mb-2'>Course Materials:</h4>\n                  {course.status === 'Available' ? (\n                    <ul className='space-y-1 ml-4'>\n                      {course.materials.map((material, matIndex) => (\n                        <li key={matIndex} className='text-sm text-gray-600 flex items-center'>\n                          <span className='w-2 h-2 bg-gray-400 rounded-full mr-3 flex-shrink-0'></span>\n                          {material.type}: {material.count} items\n                        </li>\n                      ))}\n                    </ul>\n                  ) : (\n                    <div className='text-sm text-red-600 ml-4'>\n                      Not available in Course Materials\n                    </div>\n                  )}\n                </div>\n\n                {/* Topics */}\n                <div>\n                  <h4 className='text-sm font-medium text-gray-700 mb-2'>Topics:</h4>\n                  <div className='text-sm text-gray-600 ml-4'>\n                    {course.status === 'Available' && course.topics[0] !== 'Not available'\n                      ? course.topics.join(' • ')\n                      : 'Not available in Course Materials'\n                    }\n                  </div>\n                </div>\n              </motion.div>\n            ))}\n          </div>\n        </div>\n\n        {/* Additional Resources */}\n        <div className='mb-16'>\n          <h2 className='text-3xl text-black mb-8 border-b border-[#d6ceff] pb-4'>\n            Additional Resources\n          </h2>\n          <div className='space-y-4'>\n            {resources.map((resource, index) => (\n              <motion.div\n                key={index}\n                initial={{ opacity: 0, y: 20 }}\n                animate={{ opacity: 1, y: 0 }}\n                transition={{ duration: 0.3, delay: 0.4 + index * 0.1 }}\n                className='border-b border-gray-200 pb-4 last:border-b-0'\n              >\n                <div className='flex items-start justify-between mb-2'>\n                  <div className='flex-1'>\n                    <h3 className='text-lg font-medium text-black mb-1'>\n                      {resource.title}\n                    </h3>\n                    <p className='text-sm text-gray-600 mb-2'>\n                      {resource.description}\n                    </p>\n                  </div>\n                  <div className='ml-6 text-right'>\n                    <Dialog\n                      open={getDialogState(`resource-${index}`).isOpen}\n                      onOpenChange={(open) => {\n                        if (!open) {\n                          closeDialog(`resource-${index}`)\n                        }\n                      }}\n                    >\n                      <DialogTrigger asChild>\n                        <Button\n                          size='sm'\n                          variant='outline'\n                          className='border-[#b8a9ff] text-[#6A5ACD] hover:bg-[#f3f1ff]'\n                          onClick={(e) => {\n                            openDialog(`resource-${index}`, resource, e.currentTarget)\n                          }}\n                        >\n                          Access Resource\n                        </Button>\n                      </DialogTrigger>\n                      <DialogContent className='max-w-3xl max-h-[80vh] overflow-y-auto'>\n                        <DialogHeader>\n                          <DialogTitle className='text-2xl text-black mb-2'>\n                            {resource.title}\n                          </DialogTitle>\n                          <DialogDescription>\n                            Explore this {resource.type.toLowerCase()} designed\n                            for {resource.level.toLowerCase()} learners with{' '}\n                            {resource.items} available items.\n                          </DialogDescription>\n                          <div className='flex items-center space-x-2'>\n                            <Badge\n                              variant='secondary'\n                              className='bg-[#e9e5ff] text-[#5a4fcf] border-[#b8a9ff]'\n                            >\n                              {resource.type}\n                            </Badge>\n                            <Badge className={getLevelColor(resource.level)}>\n                              {resource.level}\n                            </Badge>\n                          </div>\n                        </DialogHeader>\n                        <div className='mt-6'>\n                          <p className='text-black mb-6'>\n                            {resource.description}\n                          </p>\n\n                          <div className='mb-6'>\n                            <h4 className='text-lg text-black mb-3'>\n                              Resource Details\n                            </h4>\n                            <div className='bg-[#f3f1ff] p-4 rounded border border-[#e9e5ff]'>\n                              <div className='grid md:grid-cols-2 gap-4 text-sm text-black'>\n                                <div>\n                                  <strong>Total Items:</strong> {resource.items}\n                                </div>\n                                <div>\n                                  <strong>Difficulty Level:</strong>{' '}\n                                  {resource.level}\n                                </div>\n                                <div>\n                                  <strong>Last Updated:</strong>{' '}\n                                  {resource.lastUpdated}\n                                </div>\n                                <div>\n                                  <strong>Format:</strong> {resource.type}\n                                </div>\n                              </div>\n                            </div>\n                          </div>\n\n                          <div className='mb-6'>\n                            <h4 className='text-lg text-black mb-3'>\n                              Preview Content\n                            </h4>\n                            <div className='bg-gray-50 p-4 rounded border'>\n                              <p className='text-gray-600 text-sm italic'>\n                                {resource.type === 'Video Series' &&\n                                  'This resource includes comprehensive video tutorials with step-by-step explanations and practical examples.'}\n                                {resource.type === 'Problem Sets' &&\n                                  'A curated collection of problems with detailed solutions and explanations for self-study.'}\n                                {resource.type === 'Code Repository' &&\n                                  'Complete code examples with documentation and tutorials for hands-on learning.'}\n                                {resource.type === 'Workshop' &&\n                                  'Interactive workshop materials including exercises, data, and guided activities.'}\n                              </p>\n                            </div>\n                          </div>\n\n                          <div className='flex space-x-2'>\n                            <Button className='bg-[#6A5ACD] hover:bg-[#5a4fcf] text-white flex-1'>\n                              <BookOpen className='w-4 h-4 mr-2' />\n                              Open Full Resource\n                            </Button>\n                            <Button\n                              variant='outline'\n                              className='border-[#b8a9ff] text-[#6A5ACD] hover:bg-[#f3f1ff]'\n                            >\n                              <Download className='w-4 h-4 mr-2' />\n                              Download\n                            </Button>\n                          </div>\n                        </div>\n                      </DialogContent>\n                    </Dialog>\n                  </div>\n                </div>\n\n                {/* Inline Metadata */}\n                <div className='grid grid-cols-4 gap-4 text-sm bg-gray-50 p-3 rounded'>\n                  <div>\n                    <span className='font-medium text-gray-700'>Type:</span> {resource.type}\n                  </div>\n                  <div>\n                    <span className='font-medium text-gray-700'>Level:</span> {resource.level}\n                  </div>\n                  <div>\n                    <span className='font-medium text-gray-700'>Items:</span> {resource.items}\n                  </div>\n                  <div>\n                    <span className='font-medium text-gray-700'>Updated:</span> {resource.lastUpdated}\n                  </div>\n                </div>\n              </motion.div>\n            ))}\n          </div>\n        </div>\n\n\n      </div>\n    </motion.div>\n  )\n}\n"],"names":["Dialog","props","DialogPrimitive.Root","DialogTrigger","DialogPrimitive.Trigger","DialogPortal","DialogPrimitive.Portal","DialogOverlay","React.forwardRef","className","ref","jsx","DialogPrimitive.Overlay","cn","DialogContent","children","jsxs","DialogPrimitive.Content","DialogPrimitive.Close","XIcon","DialogHeader","DialogTitle","DialogPrimitive.Title","DialogDescription","DialogPrimitive.Description","TeachingPage","containerRef","useRef","dialogStates","setDialogStates","useState","dialogTimeouts","activeDialogs","openDialog","useCallback","dialogId","content","triggerElement","existingTimeout","prev","newStates","closeDialog","dialogState","timeout","_a","getDialogState","useEffect","cleanupTimeout","state","id","scrollYProgress","useScroll","y","useTransform","courses","FileText","Video","resources","getLevelColor","level","handleDownload","folderPath","downloadUrl","motion","course","index","open","Button","e","Badge","Download","material","matIndex","sum","m","resource","BookOpen"],"mappings":"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"}